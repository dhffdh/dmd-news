{"version":3,"sources":["api/fakeapi.js","App.js","serviceWorker.js","index.js"],"names":["fakeRequest","delay","arguments","length","undefined","Promise","resolve","setTimeout","NewsList","title","date","img","category","author","CategoryList","value","Api","getInitData","then","list","getList","params","console","log","resList","filter","newsItem","getFormatDate","dateObject","moment","format","NewsItem","_this$props","this","props","react_default","a","createElement","Card","Header","className","Img","variant","src","Body","Title","PureComponent","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","loading","newsList","categories","selectedCategory","selectedDate","handleDateChange","bind","assertThisInitialized","handleCategoryClick","clearDate","_this2","setState","ev","catValue","_this3","updateList","_this4","_this5","_this6","res","Container","Row","Col","_this7","_this$state","renderHeader","lg","ListGroup","defaultActiveKey","map","index","Item","key","action","onClick","e","href","el","index2","App_NewsItem","md","es","inline","selected","onChange","Button","renderFooter","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.699a87e1.chunk.js","sourcesContent":["function fakeRequest(delay = 2000) {\r\n    return new Promise(function(resolve) {\r\n        setTimeout(resolve, delay);\r\n    });\r\n}\r\n\r\nconst NewsList = [\r\n    {\r\n        title: \"Звезду «Что? Где? Когда?» обвиняют в подкупе ради выигрыша\",\r\n        date: \"2019-02-15\",\r\n        img: \"https://picsum.photos/400/200?000\",\r\n        category: 1,\r\n        author: \"Автор Авторов\"\r\n    },\r\n\r\n    {\r\n        title: \"В деле Azino 777 появились новые фигуранты\",\r\n        date: \"2019-02-18\",\r\n        img: \"https://picsum.photos/400/200?00\",\r\n        category: 1,\r\n        author: \"Автор Авторов\"\r\n    },\r\n    \r\n\r\n    {\r\n        \"title\": \"Minga Techade\",\r\n        \"date\": \"2019-01-01\",\r\n        \"img\": \"https://picsum.photos/400/200?0\",\r\n        \"category\": 5,\r\n        \"author\": \"Clemons Antonia\"\r\n    },\r\n    {\r\n        \"title\": \"Dreamia Quiltigen\",\r\n        \"date\": \"2019-02-01\",\r\n        \"img\": \"https://picsum.photos/400/200?1\",\r\n        \"category\": 2,\r\n        \"author\": \"Sellers Mack\"\r\n    },\r\n    {\r\n        \"title\": \"Acium Andershun\",\r\n        \"date\": \"2019-02-10\",\r\n        \"img\": \"https://picsum.photos/400/200?2\",\r\n        \"category\": 2,\r\n        \"author\": \"Barron Lucy\"\r\n    },\r\n    {\r\n        \"title\": \"Snips Zizzle\",\r\n        \"date\": \"2019-01-27\",\r\n        \"img\": \"https://picsum.photos/400/200?3\",\r\n        \"category\": 4,\r\n        \"author\": \"Combs Turner\"\r\n    },\r\n    {\r\n        \"title\": \"Pheast Comverges\",\r\n        \"date\": \"2019-01-22\",\r\n        \"img\": \"https://picsum.photos/400/200?4\",\r\n        \"category\": 3,\r\n        \"author\": \"Roberson Marguerite\"\r\n    },\r\n    {\r\n        \"title\": \"Primordia Animalia\",\r\n        \"date\": \"2019-02-05\",\r\n        \"img\": \"https://picsum.photos/400/200?5\",\r\n        \"category\": 4,\r\n        \"author\": \"Langley Merrill\"\r\n    }\r\n\r\n\r\n];\r\n\r\nconst CategoryList = [\r\n    {\r\n        value: 'all',\r\n        title: 'Все',\r\n    },\r\n    {\r\n        value: 2,\r\n        title: 'Россия',\r\n    },\r\n    {\r\n        value: 3,\r\n        title: 'Мир',\r\n    },\r\n    {\r\n        value: 4,\r\n        title: 'Бывший СССР',\r\n    },\r\n    {\r\n        value: 5,\r\n        title: 'Экономика',\r\n    },\r\n    {\r\n        value: 6,\r\n        title: 'Силовые структуры',\r\n    },\r\n    {\r\n        value: 7,\r\n        title: 'Наука и техника',\r\n    }\r\n];\r\n\r\nconst Api = {\r\n\r\n    getInitData(){\r\n        return fakeRequest(100).then( () => { return { list: NewsList, category: CategoryList }} );\r\n    },\r\n\r\n\r\n    getList(params) {\r\n\r\n        console.log('getList:', params);\r\n\r\n        let resList = NewsList;\r\n\r\n        if(!!params.category){\r\n            resList = resList.filter(function (newsItem) {\r\n                if(params.category === 'all')\r\n                    return true;\r\n\r\n                return newsItem.category === params.category;\r\n            });\r\n        }\r\n\r\n        if(!!params.date){\r\n            resList = resList.filter(function (newsItem) {\r\n                if(params.date === '')\r\n                    return true;\r\n                return newsItem.date === params.date;\r\n            });\r\n        }\r\n\r\n\r\n\r\n        return fakeRequest().then(\r\n            () => {\r\n                    console.log('getNewList resList',resList);\r\n\r\n                    return resList\r\n                }\r\n            );\r\n    }\r\n};\r\n\r\n\r\nexport default Api;\r\n","import React, {Component, PureComponent} from 'react';\n\nimport { Card, Button, Row, Col, Container , ListGroup } from 'react-bootstrap';\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport Api from \"./api/fakeapi.js\";\n\nimport './App.scss';\nimport moment from 'moment';\n\n\nfunction getFormatDate(dateObject){\n    if(!dateObject)\n        return '';\n    return moment(dateObject).format('YYYY-MM-DD')\n}\n\nclass NewsItem extends PureComponent {\n\n    render() {\n        const {\n            img,\n            title,\n            date,\n            author,\n        } = this.props;\n\n        return (\n            <Card>\n                <Card.Header>\n                    <div className=\"d-flex justify-content-between\">\n                        <div className=\"text-muted\">{date}</div>\n                        <div className=\"text-muted\">{author}</div>\n                    </div>\n                </Card.Header>\n                {\n                    !!img ? <Card.Img variant=\"center\" src={img}/> : null\n                }\n                <Card.Body>\n                    <Card.Title>{title}</Card.Title>\n                    <hr/>\n                </Card.Body>\n            </Card>\n        )\n    }\n}\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true, //флаг \"Загрузка\"\n\n            newsList: [], // Список новостей\n            categories: [], // Список категорий\n\n            selectedCategory: 'all', // Текущая выбранная категория\n            selectedDate: null // Выбраянная дата\n        };\n        this.handleDateChange = this.handleDateChange.bind(this);\n        this.handleCategoryClick = this.handleCategoryClick.bind(this);\n        this.clearDate = this.clearDate.bind(this);\n    }\n\n    //Обновление списка после именений фильтров\n    updateList(){\n        Api.getList({\n            category: this.state.selectedCategory,\n            date: getFormatDate(this.state.selectedDate)\n        }).then(\n            (list) => {\n                this.setState({\n                    loading: false,\n                    newsList: list\n                });\n            }\n        );\n    }\n\n    //Обработчик смены категории\n    handleCategoryClick(ev, catValue) {\n        if(catValue === this.state.selectedCategory)\n            return true;\n        this.setState({\n                loading: true,\n                selectedCategory: catValue\n            }, () => this.updateList()\n        );\n    }\n\n    //Обработчик смены даты\n    handleDateChange(date) {\n        if(date === this.state.selectedDate)\n            return true;\n\n        this.setState({\n                loading: true,\n                selectedDate: date\n            },() => this.updateList()\n        );\n    }\n\n    //Сброс даты\n    clearDate(ev){\n        if(!this.state.selectedDate)\n            return true;\n        this.setState({\n                loading: true,\n                selectedDate: null\n            }, () => this.updateList()\n        );\n    }\n\n    componentDidMount(){\n        //Получаем из API стартовые данные\n        Api.getInitData().then(\n            (res) => {\n                this.setState({\n                    loading: false,\n                    newsList: res.list,\n                    categories: res.category,\n                });\n            }\n        );\n    }\n\n    renderHeader(){\n        return (\n            <header className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-4 bg-white border-bottom shadow-sm\">\n                <h5 className=\"my-0 mr-auto font-weight-normal\">Your logo</h5>\n            </header>\n        )\n    }\n\n    renderFooter(){\n        return (\n            <footer className=\"pt-4 my-md-5 pt-md-5 border-top\">\n                <Container>\n                    <Row>\n                        <Col>\n                            <h6 className=\"font-weight-normal\">Your logo</h6>\n                        </Col>\n                        <Col></Col>\n                        <Col></Col>\n                        <Col></Col>\n                    </Row>\n                </Container>\n            </footer>\n        )\n    }\n\n    render() {\n\n        const {\n            newsList,\n            categories,\n            loading\n        } = this.state;\n\n        return (\n            <div className=\"b-layout\">\n                <div className=\"b-layout-main\">\n\n                    {\n                        this.renderHeader()\n                    }\n\n                    <main>\n                        <Container>\n                            <Row>\n                                <Col lg={3} className=\"mb-3\">\n                                    <ListGroup defaultActiveKey=\"#all\">\n                                        {\n                                            categories.map((category,index) => {\n                                                return <ListGroup.Item key={index} action onClick={ (e) => this.handleCategoryClick(e, category.value) } href={\"#\"+category.value}>{ category.title }</ListGroup.Item>\n                                            })\n                                        }\n                                    </ListGroup>\n                                </Col>\n                                <Col>\n                                    {\n                                        !loading ?\n                                            (\n                                                <div className=\"b-list\">\n                                                    {\n                                                        (newsList.length > 0) ? newsList.map((el,index2) => {\n                                                            return <div key={index2} className=\"b-list-item\">\n                                                                <NewsItem img={el.img}\n                                                                          title={el.title}\n                                                                          date={el.date}\n                                                                          author={el.author}\n                                                                ></NewsItem>\n                                                            </div>\n                                                        }) : <div>Ничего не найдено...</div>\n                                                    }\n                                                </div>\n                                            )\n                                        :\n                                            <div>Загрузка...</div>\n                                    }\n                                </Col>\n\n                                <Col md=\"auto\" className=\"mb-3\">\n                                    <div>{ getFormatDate(this.state.selectedDate) }</div>\n                                    <DatePicker\n                                        inline\n                                        selected={ this.state.selectedDate }\n                                        onChange={this.handleDateChange}\n                                    />\n                                    <div>\n                                        <Button variant=\"link\" onClick={this.clearDate}>Сбросить дату</Button>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </main>\n\n                </div>\n\n                <div className=\"b-layout-footer\">\n                    {\n                        this.renderFooter()\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}